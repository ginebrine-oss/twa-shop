// --- 1. –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ---
const API_URL = "https://zhadkivski-shop.servegame.com";
const STATIC_URL = `${API_URL}/static/`;
const tg = window.Telegram.WebApp;

// --- –ï–ª–µ–º–µ–Ω—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ---
const appContainer = document.getElementById('app');
// –§–æ—Ä–º–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
const orderFormContainer = document.getElementById('order-form-container');
const orderForm = document.getElementById('order-form');
// –§–æ—Ä–º–∞ –¥–ª—è —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞ (–Ω–æ–≤–∞)
const profileConfirmContainer = document.getElementById('profile-confirm-container');
const profileDataDisplay = document.getElementById('profile-data-display');
const deliveryTimeProfileInput = document.getElementById('delivery_time_profile');
const confirmUseProfileBtn = document.getElementById('confirm-use-profile');
const confirmNewDataBtn = document.getElementById('confirm-new-data');
const backToCartBtn = document.getElementById('back-to-cart-btn');

// --- –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ ---
let cart = {}; 
let productsCache = {};
let userProfile = {}; // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç—É—Ç
let currentView = 'categories';

// --- 2. –ì–û–õ–û–í–ù–ê –õ–û–ì–Ü–ö–ê (–ó–ê–ü–£–°–ö) ---
tg.ready();
loadCategories();

tg.MainButton.setText("üõí –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫");
tg.MainButton.onClick(showCartSummary);

// --- 3. –§–£–ù–ö–¶–Ü–á –ù–ê–í–Ü–ì–ê–¶–Ü–á –¢–ê –í–Ü–î–û–ë–†–ê–ñ–ï–ù–ù–Ø ---

// Overlay (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
function showOverlay() {
    const overlay = document.getElementById('pageOverlay');
    if (overlay) overlay.classList.add('show');
}
function hideOverlay() {
    const overlay = document.getElementById('pageOverlay');
    if (overlay) overlay.classList.remove('show');
}

async function loadCategories() {
    currentView = 'categories';
    showLoader();
    try {
        const response = await fetch(`${API_URL}/api/categories`);
        const categories = await response.json();
        
        appContainer.innerHTML = '<h2>–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:</h2>';
        const grid = document.createElement('div');
        grid.className = 'grid-container';

        if (!categories || categories.length === 0) {
            grid.innerHTML = "<p>–ö–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ–∫–∏ —â–æ –Ω–µ–º–∞—î.</p>";
        } else {
            categories.forEach(([id, name]) => {
                grid.innerHTML += `
                    <div class="category-btn" onclick="loadProducts(${id})">
                        ${name}
                    </div>
                `;
            });
        }
        appContainer.appendChild(grid);
    } catch (e) {
        showError("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π.");
        console.error(e);
    }
    showScreen('app');
    updateMainButton();
}

async function loadProducts(categoryId) {
    currentView = 'products';
    showLoader();
    try {
        const response = await fetch(`${API_URL}/api/products/${categoryId}`);
        const products = await response.json();

        appContainer.innerHTML = `
            <div class="controls">
                <button class="btn-back" onclick="loadCategories()">‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π</button>
            </div>
            <h2>–¢–æ–≤–∞—Ä–∏:</h2>
        `;
        const grid = document.createElement('div');
        grid.className = 'grid-container';

        if (!products || products.length === 0) {
            grid.innerHTML = "<p>–í —Ü—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–µ–º–∞—î.</p>";
        } else {
            products.forEach(prod => {
                productsCache[prod.id] = prod; 
                const photoUrl = prod.photo_url ? `${STATIC_URL}${prod.photo_url}` : 'https://via.placeholder.com/150';
                const inStock = prod.stock > 0;
                
                grid.innerHTML += `
                    <div class="product-card">
                        <img src="${photoUrl}" alt="${prod.name}">
                        <div class="product-info">
                            <div class="product-name">${prod.name}</div>
                            <div class="product-price">${prod.price} –≥—Ä–Ω</div>
                            <div class="product-stock">${inStock ? `–í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ: ${prod.stock} —à—Ç.` : '–ù–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ'}</div>
                            <button class="btn-add-to-cart" id="btn-prod-${prod.id}" 
                                    onclick="addToCart(${prod.id})" ${!inStock ? 'disabled' : ''}>
                                ${cart[prod.id] ? `–£ –∫–æ—à–∏–∫—É: ${cart[prod.id]}` : (inStock ? '–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫' : '–ù–µ–º–∞—î')}
                            </button>
                        </div>
                    </div>
                `;
            });
        }
        appContainer.appendChild(grid);
    } catch (e) {
        showError("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤.");
        console.error(e);
    }
    showScreen('app');
    updateMainButton();
}

// --- 4. –õ–û–ì–Ü–ö–ê –ö–û–®–ò–ö–ê ---

function addToCart(productId) {
    const product = productsCache[productId];
    if (!product) return;

    let quantityInCart = cart[productId] || 0;

    if (quantityInCart >= product.stock) {
        tg.showAlert(`–í–∏–±–∞—á—Ç–µ, –∞–ª–µ –Ω–∞ —Å–∫–ª–∞–¥—ñ –º–∞—î–º–æ –≤—Å—å–æ–≥–æ ${product.stock} —à—Ç üò¢`);
        return;
    }
    cart[productId] = quantityInCart + 1;
    tg.HapticFeedback.notificationOccurred('success');
    
    const btn = document.getElementById(`btn-prod-${productId}`);
    if (btn) {
        btn.innerText = `–£ –∫–æ—à–∏–∫—É: ${cart[productId]}`;
        // üîπ –î–æ–¥–∞—î–º–æ –∫–æ—Ä–æ—Ç–∫—É –∞–Ω—ñ–º–∞—Ü—ñ—é –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è
        btn.classList.add('pulse');
        setTimeout(() => btn.classList.remove('pulse'), 350);
    }

    updateMainButton();
}


function removeFromCart(productId) {
    if (cart[productId]) {
        delete cart[productId];
        tg.HapticFeedback.notificationOccurred('warning');
        showCartSummary(); // –û–Ω–æ–≤–∏—Ç–∏ –≤–∏–≥–ª—è–¥ –∫–æ—à–∏–∫–∞
    }
}

function updateMainButton() {
    const totalItems = Object.values(cart).reduce((sum, qty) => sum + qty, 0);

    if (totalItems > 0) {
        if (currentView === 'cart') {
            tg.MainButton.setText("‚úÖ –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è");
        } else {
            tg.MainButton.setText(`üõí –ö–æ—à–∏–∫ (${totalItems} —Ç–æ–≤–∞—Ä${totalItems === 1 ? '' : '–∏'})`);
        }
        tg.MainButton.show();
    } else {
        tg.MainButton.hide();
    }
}

function showCartSummary() {
    if (Object.keys(cart).length === 0) {
        tg.showAlert("–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.");
        return;
    }

    if (currentView !== 'cart') {
        currentView = 'cart';
        showLoader();
        appContainer.innerHTML = '<h2>üõí –í–∞—à –∫–æ—à–∏–∫:</h2>';
        
        let totalPrice = 0;
        const cartItemsContainer = document.createElement('div');
        
        for (const productId in cart) {
            const product = productsCache[productId];
            const quantity = cart[productId];
            if (!product) continue;
            
            const itemPrice = product.price * quantity;
            totalPrice += itemPrice;
            
            cartItemsContainer.innerHTML += `
                <div class="cart-item">
                    <b>${product.name}</b>
                    <p>${quantity} —à—Ç. x ${product.price} –≥—Ä–Ω = ${itemPrice} –≥—Ä–Ω</p>
                    <button onclick="removeFromCart(${productId})">–í–∏–¥–∞–ª–∏—Ç–∏</button>
                </div>
                <hr>
            `;
        }
        
        appContainer.appendChild(cartItemsContainer);
        appContainer.innerHTML += `<h3>–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${totalPrice} –≥—Ä–Ω</h3>`;
        
        const backBtn = document.createElement('button');
        backBtn.className = 'btn-back';
        backBtn.innerText = '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π';
        backBtn.onclick = loadCategories;
        appContainer.prepend(backBtn);
        
        showScreen('app');
        updateMainButton();
    } else {
        // –ú–∏ –í–ñ–ï –≤ –∫–æ—à–∏–∫—É, —ñ —é–∑–µ—Ä —Ç–∏—Å–Ω–µ "–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è"
        startCheckout();
    }
}

// --- 5. –õ–û–ì–Ü–ö–ê –û–§–û–†–ú–õ–ï–ù–ù–Ø –ó–ê–ú–û–í–õ–ï–ù–ù–Ø ---

// –ö—Ä–æ–∫ 1: –í–∏—Ä—ñ—à—É—î–º–æ, —è–∫–∏–π –µ–∫—Ä–∞–Ω –ø–æ–∫–∞–∑–∞—Ç–∏ (—Ñ–æ—Ä–º—É —á–∏ –ø—Ä–æ—Ñ—ñ–ª—å)
async function startCheckout() {
    const userId = tg.initDataUnsafe?.user?.id;
    
    if (!userId) {
        showOrderForm(); // –Ø–∫—â–æ –Ω–µ –º–æ–∂–µ–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ ID, –ø–æ–∫–∞–∑—É—î–º–æ –ø—É—Å—Ç—É —Ñ–æ—Ä–º—É
        return;
    }

    try {
        const response = await fetch(`${API_URL}/api/profile/${userId}`);
        const profile = await response.json();
        
        if (profile && profile.name) {
            userProfile = profile; // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å
            showProfileConfirm(profile); // –ü–æ–∫–∞–∑—É—î–º–æ –µ–∫—Ä–∞–Ω –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
        } else {
            showOrderForm(); // –ü—Ä–æ—Ñ—ñ–ª—é –Ω–µ–º–∞—î, –ø–æ–∫–∞–∑—É—î–º–æ –ø—É—Å—Ç—É —Ñ–æ—Ä–º—É
        }
    } catch (e) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é:", e);
        tg.showAlert("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    }
}

// –ö—Ä–æ–∫ 2 (–ì—ñ–ª–∫–∞ A): –ü–æ–∫–∞–∑–∞—Ç–∏ –µ–∫—Ä–∞–Ω –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
function showProfileConfirm(profile) {
    currentView = 'profile';
    profileDataDisplay.innerHTML = `
        <p><strong>–ü–Ü–ë:</strong> ${profile.name}</p>
        <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${profile.phone}</p>
        <p><strong>–ê–¥—Ä–µ—Å–∞:</strong> ${profile.address}</p>
    `;
    showScreen('profile');
}

// –ö—Ä–æ–∫ 2 (–ì—ñ–ª–∫–∞ B): –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—É—Å—Ç—É —Ñ–æ—Ä–º—É
function showOrderForm() {
    currentView = 'order';
    // –ê–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ, —è–∫—â–æ –≤–æ–Ω–æ —î –≤ Telegram
    const user = tg.initDataUnsafe?.user;
    if (user && !document.getElementById('name').value) {
        document.getElementById('name').value = `${user.first_name || ''} ${user.last_name || ''}`.trim();
    }
    showScreen('order');
}

// –ö—Ä–æ–∫ 3 (–ì—ñ–ª–∫–∞ A): –Æ–∑–µ—Ä —Ç–∏—Å–Ω–µ "–í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —Ü—ñ –¥–∞–Ω—ñ"
confirmUseProfileBtn.onclick = () => {
    const deliveryTime = deliveryTimeProfileInput.value || '–Ø–∫–Ω–∞–π—à–≤–∏–¥—à–µ';
    const clientDetails = { ...userProfile, delivery_time: deliveryTime };
    submitOrder(clientDetails);
};

// –ö—Ä–æ–∫ 3 (–ì—ñ–ª–∫–∞ B): –Æ–∑–µ—Ä —Ç–∏—Å–Ω–µ "–í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ñ –¥–∞–Ω—ñ"
confirmNewDataBtn.onclick = showOrderForm;

// –ö—Ä–æ–∫ 3 (–ì—ñ–ª–∫–∞ C): –Æ–∑–µ—Ä –∑–∞–ø–æ–≤–Ω—é—î –ø—É—Å—Ç—É —Ñ–æ—Ä–º—É
orderForm.onsubmit = (e) => {
¬† ¬† e.preventDefault();

    // --- –ü–û–ß–ê–¢–û–ö –ù–û–í–û–ì–û –ë–õ–û–ö–£ –í–ê–õ–Ü–î–ê–¶–Ü–á ---
    const name = document.getElementById('name').value.trim();
    const phone = document.getElementById('phone').value.trim();
    const address = document.getElementById('address').value.trim();

    if (!name) {
        tg.showAlert("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –í–∞—à–µ –ü–Ü–ë.");
        return;
    }
    if (!phone) {
        tg.showAlert("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω.");
        return;
    }
    if (!address) {
        tg.showAlert("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –í–∞—à—É –∞–¥—Ä–µ—Å—É.");
        return;
    }
    // --- –ö–Ü–ù–ï–¶–¨ –ù–û–í–û–ì–û –ë–õ–û–ö–£ –í–ê–õ–Ü–î–ê–¶–Ü–á ---

¬† ¬† const clientDetails = {
¬† ¬† ¬† ¬† telegram_id: tg.initDataUnsafe?.user?.id || null,
        name: name, // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—á–∏—â–µ–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
        phone: phone, // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—á–∏—â–µ–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
        address: address, // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ—á–∏—â–µ–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
¬† ¬† ¬† ¬† delivery_time: document.getElementById('delivery_time').value || '–Ø–∫–Ω–∞–π—à–≤–∏–¥—à–µ'
¬† ¬† };
¬† ¬† submitOrder(clientDetails);
};

// –ö—Ä–æ–∫ 3 (–ù–∞–∑–∞–¥): –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑ —Ñ–æ—Ä–º–∏ –¥–æ –∫–æ—à–∏–∫–∞
backToCartBtn.onclick = () => {
    showScreen('app');
    currentView = 'cart';
    updateMainButton();
};

// –ö—Ä–æ–∫ 4: –§—ñ–Ω–∞–ª—å–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (—Å–ø—ñ–ª—å–Ω–∞ –¥–ª—è –æ–±–æ—Ö –≥—ñ–ª–æ–∫)
async function submitOrder(clientDetails) {
    let totalPrice = 0;
    for (const productId in cart) {
        const product = productsCache[productId];
        const quantity = cart[productId];
        if (product) {
            totalPrice += product.price * quantity;
        }
    }
    
    // --- –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ª–µ 'telegram_id', —è–∫—â–æ –≤–æ–Ω–æ —î ---
    if (clientDetails.hasOwnProperty('telegram_id')) {
        delete clientDetails.telegram_id;
    }
    // --- –ö–Ü–ù–ï–¶–¨ –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø ---

    const orderData = {
        cart: cart,
        client_details: clientDetails, // –¢–µ–ø–µ—Ä —Ç—É—Ç –Ω–µ–º–∞—î 'telegram_id'
        total_price: totalPrice
    };

    const dataString = JSON.stringify(orderData);

    // --- –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–æ–∫–∞–∂–µ–º–æ, —â–æ —Å–∞–º–µ –º–∏ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ ---
    tg.showAlert(`[DEBUG] –ù–∞–¥—Å–∏–ª–∞—é –¥–∞–Ω—ñ: ${dataString.substring(0, 250)}`);

    try {
        // **–ì–û–õ–û–í–ù–ò–ô –ö–†–û–ö: –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö –±–æ—Ç—É**
        tg.sendData(dataString);
        
        // –Ø–∫—â–æ —Ü–µ–π –∫–æ–¥ –≤–∏–∫–æ–Ω–∞—î—Ç—å—Å—è, –∑–Ω–∞—á–∏—Ç—å sendData –Ω–µ –∑–∞–∫—Ä–∏–ª–∞ –¥–æ–¥–∞—Ç–æ–∫
        tg.showAlert("[DEBUG] –ü–æ–º–∏–ª–∫–∞: sendData() –±—É–ª–∞ –≤–∏–∫–ª–∏–∫–∞–Ω–∞, –∞–ª–µ –Ω–µ –∑–∞–∫—Ä–∏–ª–∞ –¥–æ–¥–∞—Ç–æ–∫.");

    } catch (error) {
        // –Ø–∫—â–æ sendData –∑–≥–µ–Ω–µ—Ä—É–≤–∞–ª–∞ –ø–æ–º–∏–ª–∫—É
        console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: ", error);
        tg.showAlert(`[DEBUG] –ü–æ–º–∏–ª–∫–∞ catch: ${error}`);
    }
}

// --- 6. –î–û–ü–û–ú–Ü–ñ–ù–Ü –§–£–ù–ö–¶–Ü–á ---

// –ö–µ—Ä—É—î –≤–∏–¥–∏–º—ñ—Å—Ç—é –µ–∫—Ä–∞–Ω—ñ–≤
function showScreen(screenName) {
    const screens = [appContainer, orderFormContainer, profileConfirmContainer];
    screens.forEach(el => el.classList.add('hidden'));

    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Ü—ñ–ª—å–æ–≤–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    let target = null;
    if (screenName === 'app') target = appContainer;
    else if (screenName === 'order') target = orderFormContainer;
    else if (screenName === 'profile') target = profileConfirmContainer;

    if (!target) return; // –Ø–∫—â–æ none ‚Äî –≤—Å–µ —Ö–æ–≤–∞—î–º–æ

    // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –≤—Ö–æ–¥—É
    target.classList.remove('hidden');
    target.classList.add('route-enter');

    // –¢—Ä–æ—Ö–∏ –ø—ñ–∑–Ω—ñ—à–µ ‚Äî –∞–∫—Ç–∏–≤—É—î–º–æ —ó—ó
    requestAnimationFrame(() => {
        target.classList.add('route-enter-active');
        setTimeout(() => {
            target.classList.remove('route-enter', 'route-enter-active');
        }, 400);
    });

    // –ì–æ–ª–æ–≤–Ω—É –∫–Ω–æ–ø–∫—É —Ö–æ–≤–∞—î–º–æ –ª–∏—à–µ –∫–æ–ª–∏ —Ü–µ –Ω–µ cart/order
    if (screenName !== 'none') tg.MainButton.hide();
}
function showLoader() {
    appContainer.innerHTML = `
        <div class="loader fade-in">‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>
    `;
}










// --- 1. –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ---

// URL –≤–∞—à–æ–≥–æ API, —è–∫–∏–π –º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–ª–∏ –Ω–∞ Nginx
const API_URL = "https://zhadkivski-shop.servegame.com";
// URL –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ (—Ñ–æ—Ç–æ)
const STATIC_URL = `${API_URL}/static/`;

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram Web App
const tg = window.Telegram.WebApp;

// –û—Ç—Ä–∏–º—É—î–º–æ –≥–æ–ª–æ–≤–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
const appContainer = document.getElementById('app');
const orderFormContainer = document.getElementById('order-form-container');
const orderForm = document.getElementById('order-form');

// –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
let cart = {}; // –ù–∞—à –∫–æ—à–∏–∫ { product_id: quantity }
let productsCache = {}; // –ö–µ—à —Ç–æ–≤–∞—Ä—ñ–≤, —â–æ–± –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ —ó—Ö –∑–Ω–æ–≤—É
let currentView = 'categories'; // –ü–æ—Ç–æ—á–Ω–∏–π –µ–∫—Ä–∞–Ω ('categories', 'products', 'cart')

// --- 2. –ì–û–õ–û–í–ù–ê –õ–û–ì–Ü–ö–ê (–ó–ê–ü–£–°–ö) ---

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –≥–æ–ª–æ–≤–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é, –∫–æ–ª–∏ TWA –≥–æ—Ç–æ–≤–∏–π
tg.ready();
loadCategories();

// –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ì–æ–ª–æ–≤–Ω—É –ö–Ω–æ–ø–∫—É Telegram
tg.MainButton.setText("üõí –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫");
tg.MainButton.onClick(showCartSummary);

// --- 3. –§–£–ù–ö–¶–Ü–á –ù–ê–í–Ü–ì–ê–¶–Ü–á –¢–ê –í–Ü–î–û–ë–†–ê–ñ–ï–ù–ù–Ø ---

// –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ç–∞ –ø–æ–∫–∞–∑—É—î –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
async function loadCategories() {
    currentView = 'categories';
    showLoader();
    try {
        const response = await fetch(`${API_URL}/api/categories`);
        const categories = await response.json();
        
        appContainer.innerHTML = '<h2>–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:</h2>';
        const grid = document.createElement('div');
        grid.className = 'grid-container';

        categories.forEach(([id, name]) => {
            grid.innerHTML += `
                <div class="category-btn" onclick="loadProducts(${id})">
                    ${name}
                </div>
            `;
        });
        appContainer.appendChild(grid);
    } catch (e) {
        showError("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π.");
        console.error(e);
    }
    updateMainButton();
}

// –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ç–∞ –ø–æ–∫–∞–∑—É—î —Ç–æ–≤–∞—Ä–∏
async function loadProducts(categoryId) {
    currentView = 'products';
    showLoader();
    try {
        const response = await fetch(`${API_URL}/api/products/${categoryId}`);
        const products = await response.json();

        appContainer.innerHTML = `
            <div class="controls">
                <button class="btn-back" onclick="loadCategories()">‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π</button>
            </div>
            <h2>–¢–æ–≤–∞—Ä–∏:</h2>
        `;
        const grid = document.createElement('div');
        grid.className = 'grid-container';

        if (products.length === 0) {
            grid.innerHTML = "<p>–í —Ü—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–µ–º–∞—î.</p>";
        }

        products.forEach(prod => {
            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–æ–≤–∞—Ä —É –∫–µ—à
            productsCache[prod.id] = prod; 
            
            const photoUrl = prod.photo_url ? `${STATIC_URL}${prod.photo_url}` : 'https://via.placeholder.com/150'; // –ó–∞–≥–ª—É—à–∫–∞, —è–∫—â–æ —Ñ–æ—Ç–æ –Ω–µ–º–∞—î
            const inStock = prod.stock > 0;
            
            grid.innerHTML += `
                <div class="product-card">
                    <img src="${photoUrl}" alt="${prod.name}">
                    <div class="product-info">
                        <div class="product-name">${prod.name}</div>
                        <div class="product-price">${prod.price} –≥—Ä–Ω</div>
                        <div class="product-stock">${inStock ? `–í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ: ${prod.stock} —à—Ç.` : '–ù–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ'}</div>
                        <button class="btn-add-to-cart" id="btn-prod-${prod.id}" 
                                onclick="addToCart(${prod.id})" ${!inStock ? 'disabled' : ''}>
                            ${!inStock ? '–ù–µ–º–∞—î' : '–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫'}
                        </button>
                    </div>
                </div>
            `;
        });
        appContainer.appendChild(grid);
    } catch (e) {
        showError("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤.");
        console.error(e);
    }
    updateMainButton();
}

// --- 4. –õ–û–ì–Ü–ö–ê –ö–û–®–ò–ö–ê ---

// –î–æ–¥–∞—î —Ç–æ–≤–∞—Ä —É –∫–æ—à–∏–∫
function addToCart(productId) {
    const product = productsCache[productId];
    if (!product) return;

    let quantityInCart = cart[productId] || 0;

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–∏—à–∫—ñ–≤
    if (quantityInCart >= product.stock) {
        tg.showAlert(`–í–∏–±–∞—á—Ç–µ, –∞–ª–µ –Ω–∞ —Å–∫–ª–∞–¥—ñ –º–∞—î–º–æ –≤—Å—å–æ–≥–æ ${product.stock} —à—Ç üò¢`);
        return;
    }

    cart[productId] = quantityInCart + 1;
    
    // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è
    tg.HapticFeedback.notificationOccurred('success');
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫—É
    const btn = document.getElementById(`btn-prod-${productId}`);
    if (btn) {
        btn.innerText = `–£ –∫–æ—à–∏–∫—É: ${cart[productId]}`;
    }
    
    updateMainButton();
}

// –û–Ω–æ–≤–ª—é—î –≤–∏–≥–ª—è–¥ —Ç–∞ —Ç–µ–∫—Å—Ç –ì–æ–ª–æ–≤–Ω–æ—ó –ö–Ω–æ–ø–∫–∏
function updateMainButton() {
    const totalItems = Object.values(cart).reduce((sum, qty) => sum + qty, 0);

    if (totalItems > 0) {
        if (currentView === 'cart') {
            tg.MainButton.setText("‚úÖ –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è");
        } else {
            tg.MainButton.setText(`üõí –ö–æ—à–∏–∫ (${totalItems} —Ç–æ–≤–∞—Ä${totalItems === 1 ? '' : '–∏'})`);
        }
        tg.MainButton.show();
    } else {
        tg.MainButton.hide();
    }
}

// –ü–æ–∫–∞–∑—É—î –≤–º—ñ—Å—Ç –∫–æ—à–∏–∫–∞ (–Ω–æ–≤–∞ "—Å—Ç–æ—Ä—ñ–Ω–∫–∞")
function showCartSummary() {
    if (Object.keys(cart).length === 0) {
        tg.showAlert("–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.");
        return;
    }

    // –Ø–∫—â–æ –º–∏ –Ω–µ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∫–æ—à–∏–∫–∞, –ø–æ–∫–∞–∑—É—î–º–æ –∫–æ—à–∏–∫
    // –Ø–∫—â–æ –º–∏ –í–ñ–ï –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∫–æ—à–∏–∫–∞, –ø–æ–∫–∞–∑—É—î–º–æ —Ñ–æ—Ä–º—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    if (currentView !== 'cart') {
        currentView = 'cart';
        showLoader();
        appContainer.innerHTML = '<h2>üõí –í–∞—à –∫–æ—à–∏–∫:</h2>';
        
        let totalPrice = 0;
        const cartItemsContainer = document.createElement('div');
        
        for (const productId in cart) {
            const product = productsCache[productId];
            const quantity = cart[productId];
            if (!product) continue; // –¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∫–µ—à—ñ
            
            const itemPrice = product.price * quantity;
            totalPrice += itemPrice;
            
            cartItemsContainer.innerHTML += `
                <div class="cart-item">
                    <b>${product.name}</b>
                    <p>${quantity} —à—Ç. x ${product.price} –≥—Ä–Ω = ${itemPrice} –≥—Ä–Ω</p>
                    <button onclick="removeFromCart(${productId})">–í–∏–¥–∞–ª–∏—Ç–∏</button>
                </div>
                <hr>
            `;
        }
        
        appContainer.appendChild(cartItemsContainer);
        appContainer.innerHTML += `<h3>–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${totalPrice} –≥—Ä–Ω</h3>`;
        
        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        const backBtn = document.createElement('button');
        backBtn.className = 'btn-back';
        backBtn.innerText = '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –¥–æ —Ç–æ–≤–∞—Ä—ñ–≤';
        backBtn.onclick = () => {
             // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π, –±–æ –Ω–µ –∑–Ω–∞—î–º–æ, –∑ —è–∫–æ—ó —Å–∞–º–µ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø—Ä–∏–π—à–æ–≤ —é–∑–µ—Ä
            loadCategories();
        };
        appContainer.prepend(backBtn);
        
        updateMainButton();
    } else {
        // –ú–∏ –í–ñ–ï –≤ –∫–æ—à–∏–∫—É, —ñ —é–∑–µ—Ä —Ç–∏—Å–Ω–µ "–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è"
        showOrderForm();
    }
}

// –í–∏–¥–∞–ª—è—î —Ç–æ–≤–∞—Ä –∑ –∫–æ—à–∏–∫–∞ (—Å–ø—Ä–æ—â–µ–Ω–æ, –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ +-)
function removeFromCart(productId) {
    if (cart[productId]) {
        delete cart[productId];
        tg.HapticFeedback.notificationOccurred('warning');
        showCartSummary(); // –û–Ω–æ–≤–∏—Ç–∏ –≤–∏–≥–ª—è–¥ –∫–æ—à–∏–∫–∞
    }
}

// --- 5. –õ–û–ì–Ü–ö–ê –û–§–û–†–ú–õ–ï–ù–ù–Ø –ó–ê–ú–û–í–õ–ï–ù–ù–Ø ---

// –ü–æ–∫–∞–∑—É—î —Ñ–æ—Ä–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è
function showOrderForm() {
    currentView = 'order';
    appContainer.classList.add('hidden'); // –•–æ–≤–∞—î–º–æ –∫–∞—Ç–∞–ª–æ–≥
    orderFormContainer.classList.remove('hidden'); // –ü–æ–∫–∞–∑—É—î–º–æ —Ñ–æ—Ä–º—É
    tg.MainButton.hide(); // –•–æ–≤–∞—î–º–æ –≥–æ–ª–æ–≤–Ω—É –∫–Ω–æ–ø–∫—É, –ø–æ–∫–∏ —é–∑–µ—Ä –∑–∞–ø–æ–≤–Ω—é—î —Ñ–æ—Ä–º—É

    // –°–ø—Ä–æ–±—É—î–º–æ –∞–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–∏—Ç–∏ –¥–∞–Ω—ñ –∑ Telegram
    const user = tg.initDataUnsafe?.user;
    if (user) {
        document.getElementById('name').value = `${user.first_name || ''} ${user.last_name || ''}`.trim();
    }
}

// –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" —É —Ñ–æ—Ä–º—ñ
document.getElementById('back-to-cart-btn').onclick = () => {
    orderFormContainer.classList.add('hidden'); // –•–æ–≤–∞—î–º–æ —Ñ–æ—Ä–º—É
    appContainer.classList.remove('hidden'); // –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ—à–∏–∫
    currentView = 'cart';
    updateMainButton();
};

// –û–±—Ä–æ–±–Ω–∏–∫ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∏
orderForm.onsubmit = async (e) => {
    e.preventDefault(); // –ó–∞–±–æ—Ä–æ–Ω—è—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –≤—ñ–¥–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º–∏
    
    // –ó–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    let totalPrice = 0;
    for (const productId in cart) {
        const product = productsCache[productId];
        const quantity = cart[productId];
        if (product) {
            totalPrice += product.price * quantity;
        }
    }
    
    const clientDetails = {
        telegram_id: tg.initDataUnsafe?.user?.id || null,
        name: document.getElementById('name').value,
        phone: document.getElementById('phone').value,
        address: document.getElementById('address').value,
        delivery_time: document.getElementById('delivery_time').value || '–Ø–∫–Ω–∞–π—à–≤–∏–¥—à–µ'
    };
    
    const orderData = {
        cart: cart,
        client_details: clientDetails,
        total_price: totalPrice
    };

    try {
        // –ì–æ—Ç—É—î–º–æ –ì–æ–ª–æ–≤–Ω—É –ö–Ω–æ–ø–∫—É –¥–æ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
        tg.MainButton.setText("–û–±—Ä–æ–±–∫–∞...");
        tg.MainButton.showProgress(true);
        tg.MainButton.disable();

        // **–ì–û–õ–û–í–ù–ò–ô –ö–†–û–ö: –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö –±–æ—Ç—É**
        // –í–∞—à backend (`web_app_data_handler`) –æ—Ç—Ä–∏–º–∞—î —Ü–µ–π JSON
        tg.sendData(JSON.stringify(orderData));

        // tg.sendData() –Ω–µ –¥–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, —É—Å–ø—ñ—Ö —á–∏ –Ω—ñ.
        // –ë–æ—Ç –º–∞—î –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ —é–∑–µ—Ä—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º.
        // –ú–∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä–∏–≤–∞—î–º–æ TWA –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏.
        
        // tg.close() –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞–Ω–æ –ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –±–æ—Ç –æ—Ç—Ä–∏–º–∞—î –¥–∞–Ω—ñ
        // (–ê–ª–µ –¥–ª—è –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ –∑–∞–∫—Ä–∏—î–º–æ —á–µ—Ä–µ–∑ 1 —Å–µ–∫, —è–∫—â–æ sendData –Ω–µ –∑–∞–∫—Ä–∏—î)
        setTimeout(() => tg.close(), 1000);

    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: ", error);
        tg.showAlert("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫–Ω–æ–ø–∫—É –≤ —Ä–æ–±–æ—á–∏–π —Å—Ç–∞–Ω
        tg.MainButton.setText("–ü–æ–º–∏–ª–∫–∞! –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑");
        tg.MainButton.hideProgress(false);
        tg.MainButton.enable();
    }
};


// --- 6. –î–û–ü–û–ú–Ü–ñ–ù–Ü –§–£–ù–ö–¶–Ü–á ---

function showLoader() {
    appContainer.innerHTML = '<div class="loader">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>';
}

function showError(message) {
    appContainer.innerHTML = `<div class="error">${message}</div>`;
}